<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"     
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"     
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"> 
	
	<!-- 隐式地向 Spring 容器注册 AutowiredAnnotationBeanPostProcessor、CommonAnnotationBeanPostProcessor、
		PersistenceAnnotationBeanPostProcessor、RequiredAnnotationBeanPostProcessor 这4个BeanPostProcessor-->
	<context:annotation-config />  
	
	<!-- 自动注册DefaultAnnotationHandlerMapping 与AnnotationMethodHandlerAdapter两个bean,无法给它注入interceptors属性，就无法指定拦截器 -->
	<!--<mvc:annotation-driven />--> 
	
	<!-- 把标记了@Controller注解的类转换为bean -->
	<context:component-scan base-package="ecp.bsp.system.core" />  
   	<context:component-scan base-package="mis.security.controller" /> 
   	<context:component-scan base-package="mis.meeting.controller" /> 
   	<context:component-scan base-package="mis.shortmessage.controller" /> 
   	<!-- 开启注解式处理器支持 -->
   	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >
		<property name="messageConverters">  
       		<list>  
           		<ref bean="mappingJacksonHttpMessageConverter"/>  
       		</list>  
  		</property>  
	</bean>  
	
	<!-- 用来处理json格式转换 -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
   		<property name="supportedMediaTypes">  
	    	<list>  
	        	<value>text/html;charset=UTF-8</value>  
	       	</list>  
   		</property>  
 	</bean> 
 	
 	<!-- 声明自动为spring容器中那些配置@aspectJ切面的bean创建代理，织入切面 -->
 	<aop:aspectj-autoproxy proxy-target-class="true"/>

</beans>